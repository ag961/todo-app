{"version":3,"sources":["context/settings/context.js","hooks/form.js","components/todo/pagination.js","components/todo/list.js","components/todo/form.js","components/todo/todo.js","components/header/header.js","app.js","index.js"],"names":["SettingsContext","React","createContext","SettingProvider","props","Provider","value","displayCompleted","itemsPerPage","children","useForm","callback","useState","values","setValues","handleChange","event","console","log","target","name","handleSubmit","preventDefault","text","assignee","Pagination","itemsToSkip","prevPage","nextPage","pagesArray","currentPage","selectPage","listFiltered","n","useContext","onClick","length","map","page","index","className","List","list","toggleComplete","context","setItemsToSkip","setPagesArray","numberOfPages","setNumberOfPages","setCurrentPage","filter","item","complete","useEffect","updatedNumberOfPages","Math","ceil","slice","listToDisplay","difficulty","id","toString","Form","onSubmit","onChange","type","placeholder","defaultValue","min","max","ToDo","setList","incomplete","setIncomplete","uuid","incompleteCount","document","title","items","Header","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2b9da04e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const SettingsContext = React.createContext();\n\nexport default function SettingProvider(props) {\n\n  const state = {\n    displayCompleted: true,\n    itemsPerPage: 3\n  }\n\n  return (\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  )\n}","import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n\n    callback(values);\n\n    setValues(values => ({ text: values.text, assignee: values.assignee }));\n  };\n\n  const handleChange = (event) => {\n    console.log('changing values...', values)\n\n    setValues(values => {\n      return { ...values, [event.target.name]: event.target.value }\n    });\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;","import React from 'react';\nimport { useContext } from 'react';\nimport { SettingsContext } from '../../context/settings/context';\n\nexport default function Pagination({ itemsToSkip, prevPage, nextPage, pagesArray, currentPage, selectPage, listFiltered }) {\n\n  const context = useContext(SettingsContext);\n  let n = context.itemsPerPage;\n\n  return (\n    <>\n      {itemsToSkip ? <button onClick={prevPage}>Previous </button> : ''}\n      {pagesArray.length > 1 ? pagesArray.map((page, index) => currentPage === page ? <span key={index} className=\"current-page\">{page}</span> : <a key={index} className=\"change-pages\" onClick={(event) => selectPage(page, event)}>{page}</a>) : ''}\n      {listFiltered.length > (itemsToSkip + n) ? <button onClick={nextPage}>Next</button> : ''}\n    </>\n  )\n}","import React, { useState, useContext, useEffect } from 'react';\nimport { SettingsContext } from '../../context/settings/context';\nimport Pagination from './pagination';\nimport './list.scss';\n\nexport default function List({ list, toggleComplete }) {\n\n  const context = useContext(SettingsContext)\n\n  let n = context.itemsPerPage;\n  const [itemsToSkip, setItemsToSkip] = useState(0)\n  const [pagesArray, setPagesArray] = useState([1]);\n  const [numberOfPages, setNumberOfPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let listFiltered = context.displayCompleted ? list : list.filter(item => !item.complete);\n\n  useEffect(() => {\n    let updatedNumberOfPages = Math.ceil(listFiltered.length / n);\n    if (numberOfPages !== updatedNumberOfPages) {\n      setNumberOfPages(updatedNumberOfPages ? updatedNumberOfPages : 1);\n    }\n  }, [listFiltered])\n\n  useEffect(() => {\n    if (numberOfPages > pagesArray[pagesArray.length - 1]) {\n      setPagesArray([...pagesArray, numberOfPages])\n    } else if (numberOfPages < pagesArray[pagesArray.length - 1]) {\n      setPagesArray(pagesArray.slice(0, numberOfPages))\n    }\n  }, [numberOfPages])\n\n  let listToDisplay = listFiltered.slice(itemsToSkip, itemsToSkip + n);\n\n  function nextPage() {\n    setItemsToSkip(itemsToSkip + n);\n    setCurrentPage(currentPage + 1)\n  }\n\n  function prevPage() {\n    setItemsToSkip(itemsToSkip - n);\n    setCurrentPage(currentPage - 1);\n  }\n\n  function selectPage(page, event) {\n    console.log(event)\n    setItemsToSkip((page - 1) * n)\n    setCurrentPage(page);\n  }\n\n  return (\n    <>\n      <div>\n        {listToDisplay.map(item => {\n          return <div key={item.id}>\n            <p>{item.text}</p>\n            <p><small>Assigned to: {item.assignee}</small></p>\n            <p><small>Difficulty: {item.difficulty}</small></p>\n            <div onClick={() => toggleComplete(item.id)}>Complete: {item.complete.toString()}</div>\n            <hr />\n          </div>\n        })}\n      </div>\n      <Pagination itemsToSkip={itemsToSkip} prevPage={prevPage} nextPage={nextPage} pagesArray={pagesArray} currentPage={currentPage} selectPage={selectPage} listFiltered={listFiltered} />\n    </>\n  )\n}","import React from 'react';\n\nexport default function Form({ handleSubmit, handleChange }) {\n\n  return (\n    <form onSubmit={handleSubmit}>\n\n      <h2>Add To Do Item</h2>\n\n      <label>\n        <span>To Do Item</span>\n        <input onChange={handleChange} name=\"text\" type=\"text\" placeholder=\"Item Details\" />\n      </label>\n\n      <label>\n        <span>Assigned To</span>\n        <input onChange={handleChange} name=\"assignee\" type=\"text\" placeholder=\"Assignee Name\" />\n      </label>\n\n      <label>\n        <span>Difficulty</span>\n        <input onChange={handleChange} defaultValue={3} type=\"range\" min={1} max={5} name=\"difficulty\" />\n      </label>\n\n      <label>\n        <button type=\"submit\">Add Item</button>\n      </label>\n    </form>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport useForm from '../../hooks/form.js';\nimport { v4 as uuid } from 'uuid';\nimport List from './list';\nimport Form from './form';\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n  const [incomplete, setIncomplete] = useState([]);\n  const { handleChange, handleSubmit } = useForm(addItem);\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    setList([...list, item]);\n  }\n\n  function deleteItem(id) {\n    const items = list.filter(item => item.id !== id);\n    setList(items);\n  }\n\n  function toggleComplete(id) {\n\n    const items = list.map(item => {\n      if (item.id === id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n\n    setList(items);\n  }\n\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n  }, [list]);\n\n  useEffect(() => {\n    document.title = `To Do List: ${incomplete}`;\n  }, [incomplete])\n\n  return (\n    <>\n      <h1>To Do List: {incomplete} items pending</h1>\n      <Form handleSubmit={handleSubmit} handleChange={handleChange} />\n      <List list={list} toggleComplete={toggleComplete} />\n    </>\n  );\n};\n\nexport default ToDo;","import React from \"react\";\n\nconst Header = () => (\n  <header>\n  Header\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport SettingsProvider from './context/settings/context';\n\nimport ToDo from './components/todo/todo.js';\nimport Header from './components/header/header';\n\n\nexport default function App() {\n\n  return (\n    <>\n      <SettingsProvider>\n        <Header />\n        <ToDo />\n      </SettingsProvider>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nfunction Main(){\n  return (\n    <App />\n  )\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}